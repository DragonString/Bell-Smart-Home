plugins {
	id 'org.springframework.boot' version '2.1.9.RELEASE'
	id 'io.spring.dependency-management' version '1.0.8.RELEASE'
	id 'java'
}

group = 'net.softbell'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
	developmentOnly
	runtimeClasspath {
		extendsFrom developmentOnly
	}
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	// DB
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa' // JPA
	implementation 'org.springframework.boot:spring-boot-starter-jdbc' // JDBC
	runtimeOnly 'mysql:mysql-connector-java' // MySQL Connector
    compile("com.h2database:h2") // H2
	compile group: 'org.hibernate', name: 'hibernate-search-orm', version: '5.11.4.Final' // JPA Search Engine
	
	// Security
	implementation 'org.springframework.boot:spring-boot-starter-security' // Security
	testImplementation 'org.springframework.security:spring-security-test' // Security Test
	
	// View
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf' // Thymeleaf
	implementation 'nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect' // Thymeleaf Layout
	implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity5' // Thymeleaf Spring Sequrity 5
	
	// Server
	implementation 'org.springframework.boot:spring-boot-starter-web' // Web (tomcat)
	implementation 'org.springframework.boot:spring-boot-starter-webflux' // What's this?
	
	// Websocket
    compile("org.springframework.boot:spring-boot-starter-websocket") // Websocket
	
	// Library
	compileOnly 'org.projectlombok:lombok' // Lombok
	annotationProcessor 'org.projectlombok:lombok' // Lombok
	developmentOnly 'org.springframework.boot:spring-boot-devtools' // Devtools
	testImplementation 'org.springframework.boot:spring-boot-starter-test' // Test
	testImplementation 'io.projectreactor:reactor-test' // Reactor
	compile group: 'com.google.code.gson', name: 'gson', version: '2.8.5' // Gson
}

test {
    testLogging {
        // test jvm의 standard out and standard error을 console에 출력한다.
        showStandardStreams = true // standard out, standard error 를 로깅
        showCauses = true // showException가 true여야만 활성화, 테스트 수행 시 exception이 발생 했을 때 causes 정보 출력
        showExceptions = true // 테스트 수행 시 exception이 발생 했을 때 exception정보를 로깅한다. 보통 "Failed" 이벤트 발생 시 수행
        showStackTraces = true // 테스트 수행 시 exception이 발생 했을 때 showStackTraces정보 출력
        exceptionFormat = 'full' // showStackTrace가 true 여야만 활성화, 로깅하려는 test exception 포맷
        //displayGranularity = 2 // 로그로 기록되는 이벤트의 표시 단위. 0-2
        events 'FAILED', 'PASSED', 'SKIPPED', 'STANDARD_ERROR', 'STANDARD_OUT', 'STARTED' // 로깅될 이벤트
    }
}